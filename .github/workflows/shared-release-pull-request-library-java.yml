name: Release Pull Request

on:
  workflow_call:
    inputs:
      refFrom:
        type: string
        required: true
      refTo:
        type: string
        required: true
      repositoryName:
        type: string
        required: true
      githubEventAction:
        type: string
        required: true
      prMerged:
        type: boolean
        required: true
      prNumber:
        type: string
        required: true
      initialVersion:
        type: string
        required: false

permissions:
  contents: write
  pull-requests: write
  repository-projects: read

jobs:
  determine-version:
    name: Determine Version
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.increment-version.outputs.new_tag }}
      pomVersion: ${{ steps.pom-version.outputs.pom-version }}
      sha: ${{ steps.sha.outputs.short-sha }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Get JIRA issues from commits
        id: jira-issues-from-commits
        uses: cartoncloud/actions/jira-issues-from-commits@v3
        with:
          jiraServer: ${{ vars.JIRA_SERVER }}
          jiraUsername: ${{ secrets.JIRA_USERNAME }}
          jiraPassword: ${{ secrets.JIRA_PASSWORD }}
          jiraProjectKeys: ${{ vars.JIRA_CARTONCLOUD_PROJECT_KEY }}
          refFrom: ${{ inputs.refFrom }}
          refTo: ${{ inputs.refTo }}

      - name: Get incremented version
        uses: anothrNick/github-tag-action@1.61.0
        id: increment-version
        env:
          WITH_V: true
          DRY_RUN: ${{ ! (inputs.githubEventAction == 'closed' && inputs.prMerged == true) }}
          RELEASE_BRANCHES: .*
          DEFAULT_BUMP: ${{ steps.jira-issues-from-commits.outputs.suggestedVersionBump }}
          VERBOSE: false
          INITIAL_VERSION: ${{ inputs.initialVersion }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get pom version
        id: pom-version
        run: echo "pom-version=$(echo ${{ steps.increment-version.outputs.new_tag }} | sed 's/v//')" >> $GITHUB_OUTPUT

      - name: Get short SHA
        id: sha
        run: echo "short-sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  create-draft-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    if: ${{ inputs.githubEventAction != 'closed' }}
    needs: determine-version

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Get JIRA issues from commits
        id: jira-issues-from-commits
        uses: cartoncloud/actions/jira-issues-from-commits@v3
        with:
          jiraServer: ${{ vars.JIRA_SERVER }}
          jiraUsername: ${{ secrets.JIRA_USERNAME }}
          jiraPassword: ${{ secrets.JIRA_PASSWORD }}
          jiraProjectKeys: ${{ vars.JIRA_CARTONCLOUD_PROJECT_KEY }}
          refFrom: ${{ inputs.refFrom }}
          refTo: ${{ inputs.refTo }}

      - name: Generate Markdown release notes
        id: release-notes-markdown
        uses: cartoncloud/actions/jira-release-notes-markdown@v3
        with:
          title: 'Release ${{ needs.determine-version.outputs.version }}-${{ needs.determine-version.outputs.sha }} (#${{ inputs.prNumber }})'

      - name: Update pull request description (main release)
        run: |
          gh pr edit $PR --body "$BODY
          ---
          [Steps to release](https://help.cartoncloud.com/x/zoYbIw)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ inputs.prNumber }}
          BODY: ${{ steps.release-notes-markdown.outputs.releaseNotes }}

  build:
    name: Build
    if: ${{ inputs.githubEventAction == 'closed' && inputs.prMerged == true }}
    runs-on: ubuntu-latest
    needs: determine-version
    steps:
      - uses: cartoncloud/actions/build-library-java@v3
        with:
          pomVersion: ${{ needs.determine-version.outputs.pomVersion }}
          mavenS3AccessKeyId: ${{ secrets.TEMP_MAVEN_S3_ACCESS_KEY_ID }}
          mavenS3SecretAccessKey: ${{ secrets.TEMP_MAVEN_S3_SECRET_ACCESS_KEY }}

  create-releases:
    name: Create Releases
    runs-on: ubuntu-latest
    needs: [ determine-version, build ]
    if: |
      always() && 
      !cancelled() && 
      needs.build.result == 'success' &&
      inputs.githubEventAction == 'closed' &&
      inputs.prMerged == true

    outputs:
      releaseUrl: ${{ steps.create-release.outputs.html_url }}
      jiraReleaseId: ${{ steps.create-jira-release.outputs.releaseId }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Get JIRA issues from commits
        id: jira-issues-from-commits
        uses: cartoncloud/actions/jira-issues-from-commits@v3
        with:
          jiraServer: ${{ vars.JIRA_SERVER }}
          jiraUsername: ${{ secrets.JIRA_USERNAME }}
          jiraPassword: ${{ secrets.JIRA_PASSWORD }}
          jiraProjectKeys: ${{ vars.JIRA_CARTONCLOUD_PROJECT_KEY }}
          refFrom: ${{ inputs.refFrom }}
          refTo: ${{ inputs.refTo }}

      - name: Generate Markdown release notes
        id: release-notes-markdown
        uses: cartoncloud/actions/jira-release-notes-markdown@v3

      - name: Create release
        uses: ncipollo/release-action@v1
        id: create-release
        with:
          name: ${{ needs.determine-version.outputs.version }}
          body: ${{ steps.release-notes-markdown.outputs.releaseNotes }}
          tag: ${{ needs.determine-version.outputs.version }}

      - name: Create JIRA Release
        id: create-jira-release
        uses: cartoncloud/actions/jira-project-version-create@v3
        with:
          username: ${{ secrets.JIRA_USERNAME }}
          password: ${{ secrets.JIRA_PASSWORD }}
          serverAddress: ${{ vars.JIRA_SERVER }}
          projectId: ${{ vars.JIRA_CARTONCLOUD_PROJECT_ID }}
          name: ${{ inputs.repositoryName }} ${{ needs.determine-version.outputs.version }}
          description: CartonCloud ${{ inputs.repositoryName }} ${{ needs.determine-version.outputs.version }}
          isReleased: false

      - name: Update JIRA fix versions
        uses: cartoncloud/actions/jira-issues-update-fix-version@v3
        with:
          jiraServer: ${{ vars.JIRA_SERVER }}
          jiraUsername: ${{ secrets.JIRA_USERNAME }}
          jiraPassword: ${{ secrets.JIRA_PASSWORD }}
          jiraReleaseId: ${{ steps.create-jira-release.outputs.releaseId }}

      - name: Mark JIRA as released
        uses: cartoncloud/actions/jira-project-version-update@v3
        with:
          username: ${{ secrets.JIRA_USERNAME }}
          password: ${{ secrets.JIRA_PASSWORD }}
          serverAddress: ${{ vars.JIRA_SERVER }}
          projectId: ${{ vars.JIRA_CARTONCLOUD_PROJECT_ID }}
          releaseId: ${{ steps.create-jira-release.outputs.releaseId }}
          isReleased: true
